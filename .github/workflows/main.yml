name: Deploy React Frontend to S3 (Environment-Specific)

on:
  push:
    branches:
      - main      # Deploy to Prod
      - dev       # Deploy to Dev

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Debug Environment and Secrets
        run: |
          echo "Branch: ${{ github.ref }}"
          echo "Environment: ${{ github.ref == 'refs/heads/main' && 'prod' || 'dev' }}"
          echo "S3_BUCKET: ${{ env.S3_BUCKET }}"
          echo "CF_DISTRIBUTION: ${{ env.CF_DISTRIBUTION }}"
          if [[ -z "${{ secrets.AWS_ACCESS_KEY_ID }}" || -z "${{ secrets.AWS_S3_IAM_SECRET }}" ]]; then
            echo "ðŸš¨ AWS credentials are missing!"
            exit 1
          else
            echo "âœ… AWS credentials are set."
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_IAM_SECRET }}
          aws-region: us-east-1

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies & Build React App
        run: |
          npm install
          npm run build

      - name: Deploy `dist/` Folder to S3
        run: |
          aws s3 sync dist/ s3://${{ env.S3_BUCKET }} --delete --exact-timestamps --metadata-directive REPLACE

      - name: Ensure `index.html` is uploaded with correct content-type
        run: |
          aws s3 cp dist/index.html s3://${{ env.S3_BUCKET }}/index.html --content-type "text/html"

      - name: Invalidate CloudFront Cache
        run: |
          aws cloudfront create-invalidation --distribution-id ${{ env.CF_DISTRIBUTION }} --paths "/*"
